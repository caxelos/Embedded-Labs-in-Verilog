// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp2_stage0 = "1000000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state10 = "10000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool AXIvideo2Mat::ap_const_boolean_1 = true;
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_0 = "0";
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_1 = "1";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_0 = "00";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_2 = "10";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_3 = "11";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_4 = "100";
const bool AXIvideo2Mat::ap_const_boolean_0 = false;
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_3 = "11";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_5 = "101";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_2 = "10";
const sc_lv<6> AXIvideo2Mat::ap_const_lv6_0 = "000000";
const sc_lv<6> AXIvideo2Mat::ap_const_lv6_1 = "1";

AXIvideo2Mat::AXIvideo2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_INPUT_STREAM_TDATA_blk_n);
    sensitive << ( INPUT_STREAM_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( brmerge_i_i_reg_385 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0_flag00000000 );
    sensitive << ( eol_2_i_i_reg_234 );

    SC_METHOD(thread_INPUT_STREAM_TREADY);
    sensitive << ( INPUT_STREAM_V_dest_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_ack_in);
    sensitive << ( INPUT_STREAM_V_data_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_ack_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );
    sensitive << ( ap_predicate_op62_read_state6 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_data_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_payload_A );
    sensitive << ( INPUT_STREAM_V_data_V_0_payload_B );
    sensitive << ( INPUT_STREAM_V_data_V_0_sel );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_load_A);
    sensitive << ( INPUT_STREAM_V_data_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_load_B);
    sensitive << ( INPUT_STREAM_V_data_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_sel);
    sensitive << ( INPUT_STREAM_V_data_V_0_sel_rd );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_state_cmp_full);
    sensitive << ( INPUT_STREAM_V_data_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_vld_in);
    sensitive << ( INPUT_STREAM_TVALID );

    SC_METHOD(thread_INPUT_STREAM_V_data_V_0_vld_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_dest_V_0_ack_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );
    sensitive << ( ap_predicate_op62_read_state6 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );

    SC_METHOD(thread_INPUT_STREAM_V_dest_V_0_vld_in);
    sensitive << ( INPUT_STREAM_TVALID );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_ack_in);
    sensitive << ( INPUT_STREAM_V_last_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_ack_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );
    sensitive << ( ap_predicate_op62_read_state6 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_data_out);
    sensitive << ( INPUT_STREAM_V_last_V_0_payload_A );
    sensitive << ( INPUT_STREAM_V_last_V_0_payload_B );
    sensitive << ( INPUT_STREAM_V_last_V_0_sel );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_load_A);
    sensitive << ( INPUT_STREAM_V_last_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_load_B);
    sensitive << ( INPUT_STREAM_V_last_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_sel);
    sensitive << ( INPUT_STREAM_V_last_V_0_sel_rd );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_state_cmp_full);
    sensitive << ( INPUT_STREAM_V_last_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_vld_in);
    sensitive << ( INPUT_STREAM_TVALID );

    SC_METHOD(thread_INPUT_STREAM_V_last_V_0_vld_out);
    sensitive << ( INPUT_STREAM_V_last_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_ack_in);
    sensitive << ( INPUT_STREAM_V_user_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_ack_out);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );
    sensitive << ( ap_predicate_op62_read_state6 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_data_out);
    sensitive << ( INPUT_STREAM_V_user_V_0_payload_A );
    sensitive << ( INPUT_STREAM_V_user_V_0_payload_B );
    sensitive << ( INPUT_STREAM_V_user_V_0_sel );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_load_A);
    sensitive << ( INPUT_STREAM_V_user_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_load_B);
    sensitive << ( INPUT_STREAM_V_user_V_0_sel_wr );
    sensitive << ( INPUT_STREAM_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_sel);
    sensitive << ( INPUT_STREAM_V_user_V_0_sel_rd );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_state_cmp_full);
    sensitive << ( INPUT_STREAM_V_user_V_0_state );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_vld_in);
    sensitive << ( INPUT_STREAM_TVALID );

    SC_METHOD(thread_INPUT_STREAM_V_user_V_0_vld_out);
    sensitive << ( INPUT_STREAM_V_user_V_0_state );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00001001);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( ap_predicate_op62_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011001);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( ap_predicate_op62_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011011);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( ap_predicate_op62_read_state6 );

    SC_METHOD(thread_ap_block_pp2_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp2_stage0_flag00011001);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );

    SC_METHOD(thread_ap_block_pp2_stage0_flag00011011);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_reg_234 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( ap_predicate_op62_read_state6 );

    SC_METHOD(thread_ap_block_state8_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp2_stage0_iter1);
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( eol_2_i_i_reg_234 );

    SC_METHOD(thread_ap_condition_487);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( exitcond_i_i_reg_376 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond2_i_i_fu_296_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209);

    SC_METHOD(thread_ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222);

    SC_METHOD(thread_ap_predicate_op62_read_state6);
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( brmerge_i_i_reg_385 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond2_i_i_fu_296_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_axi_last_V_2_i_i_phi_fu_214_p4);
    sensitive << ( INPUT_STREAM_V_last_V_0_data_out );
    sensitive << ( brmerge_i_i_reg_385 );
    sensitive << ( eol_reg_187 );
    sensitive << ( ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209 );
    sensitive << ( ap_condition_487 );

    SC_METHOD(thread_brmerge_i_i_fu_321_p2);
    sensitive << ( eol_i_i_phi_fu_179_p4 );
    sensitive << ( sof_1_i_i_fu_92 );

    SC_METHOD(thread_eol_2_i_i_phi_fu_237_p4);
    sensitive << ( INPUT_STREAM_V_last_V_0_data_out );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0_flag00000000 );
    sensitive << ( eol_2_i_i_reg_234 );

    SC_METHOD(thread_eol_i_i_phi_fu_179_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( eol_i_i_reg_175 );
    sensitive << ( axi_last_V_2_i_i_phi_fu_214_p4 );

    SC_METHOD(thread_exitcond2_i_i_fu_296_p2);
    sensitive << ( tmp_fu_279_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_i_i_reg_153 );

    SC_METHOD(thread_exitcond_i_i_fu_307_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( p_2_i_i_reg_164 );
    sensitive << ( tmp_9_fu_283_p1 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_V_fu_301_p2);
    sensitive << ( p_i_i_reg_153 );

    SC_METHOD(thread_img_0_data_stream_0_blk_n);
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( exitcond_i_i_reg_376 );

    SC_METHOD(thread_img_0_data_stream_0_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( p_Val2_s_phi_fu_226_p4 );
    sensitive << ( ap_block_pp1_stage0_flag00001001 );

    SC_METHOD(thread_img_0_data_stream_0_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_reg_376 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );

    SC_METHOD(thread_j_V_fu_312_p2);
    sensitive << ( p_2_i_i_reg_164 );

    SC_METHOD(thread_p_Val2_s_phi_fu_226_p4);
    sensitive << ( INPUT_STREAM_V_data_V_0_data_out );
    sensitive << ( brmerge_i_i_reg_385 );
    sensitive << ( axi_data_V_1_i_i_reg_198 );
    sensitive << ( ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222 );
    sensitive << ( ap_condition_487 );

    SC_METHOD(thread_tmp_9_fu_283_p1);
    sensitive << ( cols );

    SC_METHOD(thread_tmp_fu_279_p1);
    sensitive << ( rows );

    SC_METHOD(thread_tmp_user_V_fu_287_p1);
    sensitive << ( INPUT_STREAM_V_user_V_0_data_out );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( INPUT_STREAM_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond2_i_i_fu_296_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp2_stage0_flag00011011 );
    sensitive << ( tmp_user_V_fu_287_p1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    INPUT_STREAM_V_data_V_0_sel_rd = SC_LOGIC_0;
    INPUT_STREAM_V_data_V_0_sel_wr = SC_LOGIC_0;
    INPUT_STREAM_V_data_V_0_state = "00";
    INPUT_STREAM_V_user_V_0_sel_rd = SC_LOGIC_0;
    INPUT_STREAM_V_user_V_0_sel_wr = SC_LOGIC_0;
    INPUT_STREAM_V_user_V_0_state = "00";
    INPUT_STREAM_V_last_V_0_sel_rd = SC_LOGIC_0;
    INPUT_STREAM_V_last_V_0_sel_wr = SC_LOGIC_0;
    INPUT_STREAM_V_last_V_0_state = "00";
    INPUT_STREAM_V_dest_V_0_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, INPUT_STREAM_TDATA, "(port)INPUT_STREAM_TDATA");
    sc_trace(mVcdFile, INPUT_STREAM_TVALID, "(port)INPUT_STREAM_TVALID");
    sc_trace(mVcdFile, INPUT_STREAM_TREADY, "(port)INPUT_STREAM_TREADY");
    sc_trace(mVcdFile, INPUT_STREAM_TKEEP, "(port)INPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, INPUT_STREAM_TSTRB, "(port)INPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, INPUT_STREAM_TUSER, "(port)INPUT_STREAM_TUSER");
    sc_trace(mVcdFile, INPUT_STREAM_TLAST, "(port)INPUT_STREAM_TLAST");
    sc_trace(mVcdFile, INPUT_STREAM_TID, "(port)INPUT_STREAM_TID");
    sc_trace(mVcdFile, INPUT_STREAM_TDEST, "(port)INPUT_STREAM_TDEST");
    sc_trace(mVcdFile, rows, "(port)rows");
    sc_trace(mVcdFile, cols, "(port)cols");
    sc_trace(mVcdFile, img_0_data_stream_0_din, "(port)img_0_data_stream_0_din");
    sc_trace(mVcdFile, img_0_data_stream_0_full_n, "(port)img_0_data_stream_0_full_n");
    sc_trace(mVcdFile, img_0_data_stream_0_write, "(port)img_0_data_stream_0_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_data_out, "INPUT_STREAM_V_data_V_0_data_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_vld_in, "INPUT_STREAM_V_data_V_0_vld_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_vld_out, "INPUT_STREAM_V_data_V_0_vld_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_ack_in, "INPUT_STREAM_V_data_V_0_ack_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_ack_out, "INPUT_STREAM_V_data_V_0_ack_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_payload_A, "INPUT_STREAM_V_data_V_0_payload_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_payload_B, "INPUT_STREAM_V_data_V_0_payload_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_sel_rd, "INPUT_STREAM_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_sel_wr, "INPUT_STREAM_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_sel, "INPUT_STREAM_V_data_V_0_sel");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_load_A, "INPUT_STREAM_V_data_V_0_load_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_load_B, "INPUT_STREAM_V_data_V_0_load_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_state, "INPUT_STREAM_V_data_V_0_state");
    sc_trace(mVcdFile, INPUT_STREAM_V_data_V_0_state_cmp_full, "INPUT_STREAM_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_data_out, "INPUT_STREAM_V_user_V_0_data_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_vld_in, "INPUT_STREAM_V_user_V_0_vld_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_vld_out, "INPUT_STREAM_V_user_V_0_vld_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_ack_in, "INPUT_STREAM_V_user_V_0_ack_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_ack_out, "INPUT_STREAM_V_user_V_0_ack_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_payload_A, "INPUT_STREAM_V_user_V_0_payload_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_payload_B, "INPUT_STREAM_V_user_V_0_payload_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_sel_rd, "INPUT_STREAM_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_sel_wr, "INPUT_STREAM_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_sel, "INPUT_STREAM_V_user_V_0_sel");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_load_A, "INPUT_STREAM_V_user_V_0_load_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_load_B, "INPUT_STREAM_V_user_V_0_load_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_state, "INPUT_STREAM_V_user_V_0_state");
    sc_trace(mVcdFile, INPUT_STREAM_V_user_V_0_state_cmp_full, "INPUT_STREAM_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_data_out, "INPUT_STREAM_V_last_V_0_data_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_vld_in, "INPUT_STREAM_V_last_V_0_vld_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_vld_out, "INPUT_STREAM_V_last_V_0_vld_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_ack_in, "INPUT_STREAM_V_last_V_0_ack_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_ack_out, "INPUT_STREAM_V_last_V_0_ack_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_payload_A, "INPUT_STREAM_V_last_V_0_payload_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_payload_B, "INPUT_STREAM_V_last_V_0_payload_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_sel_rd, "INPUT_STREAM_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_sel_wr, "INPUT_STREAM_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_sel, "INPUT_STREAM_V_last_V_0_sel");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_load_A, "INPUT_STREAM_V_last_V_0_load_A");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_load_B, "INPUT_STREAM_V_last_V_0_load_B");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_state, "INPUT_STREAM_V_last_V_0_state");
    sc_trace(mVcdFile, INPUT_STREAM_V_last_V_0_state_cmp_full, "INPUT_STREAM_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, INPUT_STREAM_V_dest_V_0_vld_in, "INPUT_STREAM_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, INPUT_STREAM_V_dest_V_0_ack_out, "INPUT_STREAM_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, INPUT_STREAM_V_dest_V_0_state, "INPUT_STREAM_V_dest_V_0_state");
    sc_trace(mVcdFile, INPUT_STREAM_TDATA_blk_n, "INPUT_STREAM_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00000000, "ap_block_pp1_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_i_i_reg_376, "exitcond_i_i_reg_376");
    sc_trace(mVcdFile, brmerge_i_i_reg_385, "brmerge_i_i_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00000000, "ap_block_pp2_stage0_flag00000000");
    sc_trace(mVcdFile, eol_2_i_i_reg_234, "eol_2_i_i_reg_234");
    sc_trace(mVcdFile, img_0_data_stream_0_blk_n, "img_0_data_stream_0_blk_n");
    sc_trace(mVcdFile, p_2_i_i_reg_164, "p_2_i_i_reg_164");
    sc_trace(mVcdFile, eol_i_i_reg_175, "eol_i_i_reg_175");
    sc_trace(mVcdFile, eol_reg_187, "eol_reg_187");
    sc_trace(mVcdFile, axi_data_V_1_i_i_reg_198, "axi_data_V_1_i_i_reg_198");
    sc_trace(mVcdFile, axi_last_V_3_i_i_reg_245, "axi_last_V_3_i_i_reg_245");
    sc_trace(mVcdFile, axi_data_V_3_i_i_reg_257, "axi_data_V_3_i_i_reg_257");
    sc_trace(mVcdFile, tmp_fu_279_p1, "tmp_fu_279_p1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_9_fu_283_p1, "tmp_9_fu_283_p1");
    sc_trace(mVcdFile, tmp_data_V_reg_347, "tmp_data_V_reg_347");
    sc_trace(mVcdFile, tmp_last_V_reg_355, "tmp_last_V_reg_355");
    sc_trace(mVcdFile, exitcond2_i_i_fu_296_p2, "exitcond2_i_i_fu_296_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_301_p2, "i_V_fu_301_p2");
    sc_trace(mVcdFile, i_V_reg_371, "i_V_reg_371");
    sc_trace(mVcdFile, exitcond_i_i_fu_307_p2, "exitcond_i_i_fu_307_p2");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op62_read_state6, "ap_predicate_op62_read_state6");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011001, "ap_block_pp1_stage0_flag00011001");
    sc_trace(mVcdFile, j_V_fu_312_p2, "j_V_fu_312_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, brmerge_i_i_fu_321_p2, "brmerge_i_i_fu_321_p2");
    sc_trace(mVcdFile, ap_block_state8_pp2_stage0_iter0, "ap_block_state8_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp2_stage0_iter1, "ap_block_state9_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00011001, "ap_block_pp2_stage0_flag00011001");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011011, "ap_block_pp1_stage0_flag00011011");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00011011, "ap_block_pp2_stage0_flag00011011");
    sc_trace(mVcdFile, eol_2_i_i_phi_fu_237_p4, "eol_2_i_i_phi_fu_237_p4");
    sc_trace(mVcdFile, axi_last_V1_i_i_reg_133, "axi_last_V1_i_i_reg_133");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V1_i_i_reg_143, "axi_data_V1_i_i_reg_143");
    sc_trace(mVcdFile, p_i_i_reg_153, "p_i_i_reg_153");
    sc_trace(mVcdFile, eol_i_i_phi_fu_179_p4, "eol_i_i_phi_fu_179_p4");
    sc_trace(mVcdFile, axi_last_V_2_i_i_phi_fu_214_p4, "axi_last_V_2_i_i_phi_fu_214_p4");
    sc_trace(mVcdFile, p_Val2_s_phi_fu_226_p4, "p_Val2_s_phi_fu_226_p4");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209, "ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222, "ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00001001, "ap_block_pp1_stage0_flag00001001");
    sc_trace(mVcdFile, sof_1_i_i_fu_92, "sof_1_i_i_fu_92");
    sc_trace(mVcdFile, tmp_user_V_fu_287_p1, "tmp_user_V_fu_287_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_condition_487, "ap_condition_487");
#endif

    }
}

AXIvideo2Mat::~AXIvideo2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_vld_out.read()))) {
            INPUT_STREAM_V_data_V_0_sel_rd =  (sc_logic) (~INPUT_STREAM_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_ack_in.read()))) {
            INPUT_STREAM_V_data_V_0_sel_wr =  (sc_logic) (~INPUT_STREAM_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            INPUT_STREAM_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(INPUT_STREAM_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_ack_out.read()))))) {
            INPUT_STREAM_V_data_V_0_state = ap_const_lv2_3;
        } else {
            INPUT_STREAM_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_dest_V_0_state.read())))) {
            INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_dest_V_0_state.read())))) {
            INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_dest_V_0_ack_out.read()))))) {
            INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_vld_out.read()))) {
            INPUT_STREAM_V_last_V_0_sel_rd =  (sc_logic) (~INPUT_STREAM_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_ack_in.read()))) {
            INPUT_STREAM_V_last_V_0_sel_wr =  (sc_logic) (~INPUT_STREAM_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_last_V_0_state.read())))) {
            INPUT_STREAM_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_last_V_0_state.read())))) {
            INPUT_STREAM_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_ack_out.read()))))) {
            INPUT_STREAM_V_last_V_0_state = ap_const_lv2_3;
        } else {
            INPUT_STREAM_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_vld_out.read()))) {
            INPUT_STREAM_V_user_V_0_sel_rd =  (sc_logic) (~INPUT_STREAM_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_ack_in.read()))) {
            INPUT_STREAM_V_user_V_0_sel_wr =  (sc_logic) (~INPUT_STREAM_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        INPUT_STREAM_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_user_V_0_state.read())))) {
            INPUT_STREAM_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_user_V_0_state.read())))) {
            INPUT_STREAM_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, INPUT_STREAM_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, INPUT_STREAM_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, INPUT_STREAM_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_ack_out.read()))))) {
            INPUT_STREAM_V_user_V_0_state = ap_const_lv2_3;
        } else {
            INPUT_STREAM_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_i_fu_296_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_fu_307_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, eol_2_i_i_phi_fu_237_p4.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V1_i_i_reg_143 = tmp_data_V_reg_347.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_data_V1_i_i_reg_143 = axi_data_V_3_i_i_reg_257.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        axi_data_V_1_i_i_reg_198 = p_Val2_s_phi_fu_226_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
        axi_data_V_1_i_i_reg_198 = axi_data_V1_i_i_reg_143.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_i_i_reg_257 = axi_data_V_1_i_i_reg_198.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0))) {
        axi_data_V_3_i_i_reg_257 = INPUT_STREAM_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V1_i_i_reg_133 = tmp_last_V_reg_355.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_last_V1_i_i_reg_133 = axi_last_V_3_i_i_reg_245.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_i_i_reg_245 = eol_reg_187.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0))) {
        axi_last_V_3_i_i_reg_245 = INPUT_STREAM_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_i_i_reg_234 = eol_i_i_reg_175.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0))) {
        eol_2_i_i_reg_234 = INPUT_STREAM_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        eol_i_i_reg_175 = axi_last_V_2_i_i_phi_fu_214_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
        eol_i_i_reg_175 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        eol_reg_187 = axi_last_V_2_i_i_phi_fu_214_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
        eol_reg_187 = axi_last_V1_i_i_reg_133.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_307_p2.read()))) {
        p_2_i_i_reg_164 = j_V_fu_312_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_296_p2.read()))) {
        p_2_i_i_reg_164 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_i_i_reg_153 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_i_i_reg_153 = i_V_reg_371.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_307_p2.read()))) {
        sof_1_i_i_fu_92 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_i_i_fu_92 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_load_A.read())) {
        INPUT_STREAM_V_data_V_0_payload_A = INPUT_STREAM_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_load_B.read())) {
        INPUT_STREAM_V_data_V_0_payload_B = INPUT_STREAM_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_load_A.read())) {
        INPUT_STREAM_V_last_V_0_payload_A = INPUT_STREAM_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_load_B.read())) {
        INPUT_STREAM_V_last_V_0_payload_B = INPUT_STREAM_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_load_A.read())) {
        INPUT_STREAM_V_user_V_0_payload_A = INPUT_STREAM_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_load_B.read())) {
        INPUT_STREAM_V_user_V_0_payload_B = INPUT_STREAM_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_307_p2.read()))) {
        brmerge_i_i_reg_385 = brmerge_i_i_fu_321_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        exitcond_i_i_reg_376 = exitcond_i_i_fu_307_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_371 = i_V_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        tmp_data_V_reg_347 = INPUT_STREAM_V_data_V_0_data_out.read();
        tmp_last_V_reg_355 = INPUT_STREAM_V_last_V_0_data_out.read();
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_reg_385.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read())))) {
        INPUT_STREAM_TDATA_blk_n = INPUT_STREAM_V_data_V_0_state.read()[0];
    } else {
        INPUT_STREAM_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_TREADY() {
    INPUT_STREAM_TREADY = INPUT_STREAM_V_dest_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_ack_in() {
    INPUT_STREAM_V_data_V_0_ack_in = INPUT_STREAM_V_data_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_STREAM_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        INPUT_STREAM_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_data_V_0_sel.read())) {
        INPUT_STREAM_V_data_V_0_data_out = INPUT_STREAM_V_data_V_0_payload_B.read();
    } else {
        INPUT_STREAM_V_data_V_0_data_out = INPUT_STREAM_V_data_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_load_A() {
    INPUT_STREAM_V_data_V_0_load_A = (INPUT_STREAM_V_data_V_0_state_cmp_full.read() & ~INPUT_STREAM_V_data_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_load_B() {
    INPUT_STREAM_V_data_V_0_load_B = (INPUT_STREAM_V_data_V_0_sel_wr.read() & INPUT_STREAM_V_data_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_sel() {
    INPUT_STREAM_V_data_V_0_sel = INPUT_STREAM_V_data_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_state_cmp_full() {
    INPUT_STREAM_V_data_V_0_state_cmp_full =  (sc_logic) ((!INPUT_STREAM_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(INPUT_STREAM_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_vld_in() {
    INPUT_STREAM_V_data_V_0_vld_in = INPUT_STREAM_TVALID.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_data_V_0_vld_out() {
    INPUT_STREAM_V_data_V_0_vld_out = INPUT_STREAM_V_data_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_STREAM_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        INPUT_STREAM_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_dest_V_0_vld_in() {
    INPUT_STREAM_V_dest_V_0_vld_in = INPUT_STREAM_TVALID.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_ack_in() {
    INPUT_STREAM_V_last_V_0_ack_in = INPUT_STREAM_V_last_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_STREAM_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        INPUT_STREAM_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_last_V_0_sel.read())) {
        INPUT_STREAM_V_last_V_0_data_out = INPUT_STREAM_V_last_V_0_payload_B.read();
    } else {
        INPUT_STREAM_V_last_V_0_data_out = INPUT_STREAM_V_last_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_load_A() {
    INPUT_STREAM_V_last_V_0_load_A = (INPUT_STREAM_V_last_V_0_state_cmp_full.read() & ~INPUT_STREAM_V_last_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_load_B() {
    INPUT_STREAM_V_last_V_0_load_B = (INPUT_STREAM_V_last_V_0_sel_wr.read() & INPUT_STREAM_V_last_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_sel() {
    INPUT_STREAM_V_last_V_0_sel = INPUT_STREAM_V_last_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_state_cmp_full() {
    INPUT_STREAM_V_last_V_0_state_cmp_full =  (sc_logic) ((!INPUT_STREAM_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(INPUT_STREAM_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_vld_in() {
    INPUT_STREAM_V_last_V_0_vld_in = INPUT_STREAM_TVALID.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_last_V_0_vld_out() {
    INPUT_STREAM_V_last_V_0_vld_out = INPUT_STREAM_V_last_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_ack_in() {
    INPUT_STREAM_V_user_V_0_ack_in = INPUT_STREAM_V_user_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_STREAM_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        INPUT_STREAM_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, INPUT_STREAM_V_user_V_0_sel.read())) {
        INPUT_STREAM_V_user_V_0_data_out = INPUT_STREAM_V_user_V_0_payload_B.read();
    } else {
        INPUT_STREAM_V_user_V_0_data_out = INPUT_STREAM_V_user_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_load_A() {
    INPUT_STREAM_V_user_V_0_load_A = (INPUT_STREAM_V_user_V_0_state_cmp_full.read() & ~INPUT_STREAM_V_user_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_load_B() {
    INPUT_STREAM_V_user_V_0_load_B = (INPUT_STREAM_V_user_V_0_sel_wr.read() & INPUT_STREAM_V_user_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_sel() {
    INPUT_STREAM_V_user_V_0_sel = INPUT_STREAM_V_user_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_state_cmp_full() {
    INPUT_STREAM_V_user_V_0_state_cmp_full =  (sc_logic) ((!INPUT_STREAM_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(INPUT_STREAM_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_vld_in() {
    INPUT_STREAM_V_user_V_0_vld_in = INPUT_STREAM_TVALID.read();
}

void AXIvideo2Mat::thread_INPUT_STREAM_V_user_V_0_vld_out() {
    INPUT_STREAM_V_user_V_0_vld_out = INPUT_STREAM_V_user_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[6];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[7];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_flag00000000() {
    ap_block_pp1_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_flag00001001() {
    ap_block_pp1_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_0_data_stream_0_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_flag00011001() {
    ap_block_pp1_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_0_data_stream_0_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_flag00011011() {
    ap_block_pp1_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_0_data_stream_0_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0_flag00000000() {
    ap_block_pp2_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0_flag00011001() {
    ap_block_pp2_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0_flag00011011() {
    ap_block_pp2_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void AXIvideo2Mat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_0_data_stream_0_full_n.read())));
}

void AXIvideo2Mat::thread_ap_block_state8_pp2_stage0_iter0() {
    ap_block_state8_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_state9_pp2_stage0_iter1() {
    ap_block_state9_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_STREAM_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_condition_487() {
    ap_condition_487 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()));
}

void AXIvideo2Mat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_i_fu_296_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXIvideo2Mat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209() {
    ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat::thread_ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222() {
    ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat::thread_ap_predicate_op62_read_state6() {
    ap_predicate_op62_read_state6 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_reg_385.read()));
}

void AXIvideo2Mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_i_fu_296_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_axi_last_V_2_i_i_phi_fu_214_p4() {
    if (esl_seteq<1,1,1>(ap_condition_487.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_i_i_reg_385.read())) {
            axi_last_V_2_i_i_phi_fu_214_p4 = eol_reg_187.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_reg_385.read())) {
            axi_last_V_2_i_i_phi_fu_214_p4 = INPUT_STREAM_V_last_V_0_data_out.read();
        } else {
            axi_last_V_2_i_i_phi_fu_214_p4 = ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209.read();
        }
    } else {
        axi_last_V_2_i_i_phi_fu_214_p4 = ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209.read();
    }
}

void AXIvideo2Mat::thread_brmerge_i_i_fu_321_p2() {
    brmerge_i_i_fu_321_p2 = (sof_1_i_i_fu_92.read() | eol_i_i_phi_fu_179_p4.read());
}

void AXIvideo2Mat::thread_eol_2_i_i_phi_fu_237_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_reg_234.read()))) {
        eol_2_i_i_phi_fu_237_p4 = INPUT_STREAM_V_last_V_0_data_out.read();
    } else {
        eol_2_i_i_phi_fu_237_p4 = eol_2_i_i_reg_234.read();
    }
}

void AXIvideo2Mat::thread_eol_i_i_phi_fu_179_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()))) {
        eol_i_i_phi_fu_179_p4 = axi_last_V_2_i_i_phi_fu_214_p4.read();
    } else {
        eol_i_i_phi_fu_179_p4 = eol_i_i_reg_175.read();
    }
}

void AXIvideo2Mat::thread_exitcond2_i_i_fu_296_p2() {
    exitcond2_i_i_fu_296_p2 = (!p_i_i_reg_153.read().is_01() || !tmp_fu_279_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(p_i_i_reg_153.read() == tmp_fu_279_p1.read());
}

void AXIvideo2Mat::thread_exitcond_i_i_fu_307_p2() {
    exitcond_i_i_fu_307_p2 = (!p_2_i_i_reg_164.read().is_01() || !tmp_9_fu_283_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(p_2_i_i_reg_164.read() == tmp_9_fu_283_p1.read());
}

void AXIvideo2Mat::thread_i_V_fu_301_p2() {
    i_V_fu_301_p2 = (!p_i_i_reg_153.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_i_i_reg_153.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void AXIvideo2Mat::thread_img_0_data_stream_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()))) {
        img_0_data_stream_0_blk_n = img_0_data_stream_0_full_n.read();
    } else {
        img_0_data_stream_0_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_0_data_stream_0_din() {
    img_0_data_stream_0_din = p_Val2_s_phi_fu_226_p4.read().range(8-1, 0);
}

void AXIvideo2Mat::thread_img_0_data_stream_0_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_reg_376.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        img_0_data_stream_0_write = ap_const_logic_1;
    } else {
        img_0_data_stream_0_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_j_V_fu_312_p2() {
    j_V_fu_312_p2 = (!p_2_i_i_reg_164.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_2_i_i_reg_164.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void AXIvideo2Mat::thread_p_Val2_s_phi_fu_226_p4() {
    if (esl_seteq<1,1,1>(ap_condition_487.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_i_i_reg_385.read())) {
            p_Val2_s_phi_fu_226_p4 = axi_data_V_1_i_i_reg_198.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_reg_385.read())) {
            p_Val2_s_phi_fu_226_p4 = INPUT_STREAM_V_data_V_0_data_out.read();
        } else {
            p_Val2_s_phi_fu_226_p4 = ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222.read();
        }
    } else {
        p_Val2_s_phi_fu_226_p4 = ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222.read();
    }
}

void AXIvideo2Mat::thread_tmp_9_fu_283_p1() {
    tmp_9_fu_283_p1 = cols.read().range(6-1, 0);
}

void AXIvideo2Mat::thread_tmp_fu_279_p1() {
    tmp_fu_279_p1 = rows.read().range(6-1, 0);
}

void AXIvideo2Mat::thread_tmp_user_V_fu_287_p1() {
    tmp_user_V_fu_287_p1 = INPUT_STREAM_V_user_V_0_data_out.read();
}

void AXIvideo2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_287_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(INPUT_STREAM_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_user_V_fu_287_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_i_fu_296_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

