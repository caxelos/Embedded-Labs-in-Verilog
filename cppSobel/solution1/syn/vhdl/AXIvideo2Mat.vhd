-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIvideo2Mat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_data_stream_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_0_full_n : IN STD_LOGIC;
    img_0_data_stream_0_write : OUT STD_LOGIC );
end;


architecture behav of AXIvideo2Mat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal INPUT_STREAM_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal exitcond_i_i_reg_376 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_reg_385 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_flag00000000 : BOOLEAN;
    signal eol_2_i_i_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_0_data_stream_0_blk_n : STD_LOGIC;
    signal p_2_i_i_reg_164 : STD_LOGIC_VECTOR (5 downto 0);
    signal eol_i_i_reg_175 : STD_LOGIC_VECTOR (0 downto 0);
    signal eol_reg_187 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_i_reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_last_V_3_i_i_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_3_i_i_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_279_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_9_fu_283_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_V_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_V_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_i_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_301_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_reg_371 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_i_i_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op62_read_state6 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal j_V_fu_312_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal brmerge_i_i_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_flag00011001 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp2_stage0_flag00011011 : BOOLEAN;
    signal eol_2_i_i_phi_fu_237_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_i_i_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V1_i_i_reg_143 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i_reg_153 : STD_LOGIC_VECTOR (5 downto 0);
    signal eol_i_i_phi_fu_179_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_i_phi_fu_214_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_phi_fu_226_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0_flag00001001 : BOOLEAN;
    signal sof_1_i_i_fu_92 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_287_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_487 : BOOLEAN;


begin




    INPUT_STREAM_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_out))) then 
                                        INPUT_STREAM_V_data_V_0_sel_rd <= not(INPUT_STREAM_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_in))) then 
                                        INPUT_STREAM_V_data_V_0_sel_wr <= not(INPUT_STREAM_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_2)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out) and (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1)) or ((INPUT_STREAM_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out)))))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state) and not(((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out)))))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_out))) then 
                                        INPUT_STREAM_V_last_V_0_sel_rd <= not(INPUT_STREAM_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_in))) then 
                                        INPUT_STREAM_V_last_V_0_sel_wr <= not(INPUT_STREAM_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state) and not(((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out)))))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_out))) then 
                                        INPUT_STREAM_V_user_V_0_sel_rd <= not(INPUT_STREAM_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_in))) then 
                                        INPUT_STREAM_V_user_V_0_sel_wr <= not(INPUT_STREAM_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state) and not(((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out)))))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond2_i_i_fu_296_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_i_i_fu_307_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = eol_2_i_i_phi_fu_237_p4))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_i_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_data_V1_i_i_reg_143 <= tmp_data_V_reg_347;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                axi_data_V1_i_i_reg_143 <= axi_data_V_3_i_i_reg_257;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_i_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then 
                axi_data_V_1_i_i_reg_198 <= p_Val2_s_phi_fu_226_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                axi_data_V_1_i_i_reg_198 <= axi_data_V1_i_i_reg_143;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_i_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_data_V_3_i_i_reg_257 <= axi_data_V_1_i_i_reg_198;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0))) then 
                axi_data_V_3_i_i_reg_257 <= INPUT_STREAM_V_data_V_0_data_out;
            end if; 
        end if;
    end process;

    axi_last_V1_i_i_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_last_V1_i_i_reg_133 <= tmp_last_V_reg_355;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                axi_last_V1_i_i_reg_133 <= axi_last_V_3_i_i_reg_245;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_i_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_last_V_3_i_i_reg_245 <= eol_reg_187;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0))) then 
                axi_last_V_3_i_i_reg_245 <= INPUT_STREAM_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_2_i_i_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                eol_2_i_i_reg_234 <= eol_i_i_reg_175;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0))) then 
                eol_2_i_i_reg_234 <= INPUT_STREAM_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_i_i_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then 
                eol_i_i_reg_175 <= axi_last_V_2_i_i_phi_fu_214_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                eol_i_i_reg_175 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then 
                eol_reg_187 <= axi_last_V_2_i_i_phi_fu_214_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                eol_reg_187 <= axi_last_V1_i_i_reg_133;
            end if; 
        end if;
    end process;

    p_2_i_i_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_fu_307_p2))) then 
                p_2_i_i_reg_164 <= j_V_fu_312_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_fu_296_p2))) then 
                p_2_i_i_reg_164 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_i_i_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_i_i_reg_153 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                p_i_i_reg_153 <= i_V_reg_371;
            end if; 
        end if;
    end process;

    sof_1_i_i_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_fu_307_p2))) then 
                sof_1_i_i_fu_92 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                sof_1_i_i_fu_92 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_A)) then
                INPUT_STREAM_V_data_V_0_payload_A <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_B)) then
                INPUT_STREAM_V_data_V_0_payload_B <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_A)) then
                INPUT_STREAM_V_last_V_0_payload_A <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_B)) then
                INPUT_STREAM_V_last_V_0_payload_B <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_A)) then
                INPUT_STREAM_V_user_V_0_payload_A <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_B)) then
                INPUT_STREAM_V_user_V_0_payload_B <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_fu_307_p2))) then
                brmerge_i_i_reg_385 <= brmerge_i_i_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                exitcond_i_i_reg_376 <= exitcond_i_i_fu_307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_371 <= i_V_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1))) then
                tmp_data_V_reg_347 <= INPUT_STREAM_V_data_V_0_data_out;
                tmp_last_V_reg_355 <= INPUT_STREAM_V_last_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, INPUT_STREAM_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond2_i_i_fu_296_p2, ap_CS_fsm_state4, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_flag00011011, tmp_user_V_fu_287_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1) and (ap_const_lv1_0 = tmp_user_V_fu_287_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1) and (ap_const_lv1_1 = tmp_user_V_fu_287_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond2_i_i_fu_296_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    INPUT_STREAM_TDATA_blk_n_assign_proc : process(INPUT_STREAM_V_data_V_0_state, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000, exitcond_i_i_reg_376, brmerge_i_i_reg_385, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000, eol_2_i_i_reg_234)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_lv1_0 = brmerge_i_i_reg_385)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = eol_2_i_i_reg_234)))) then 
            INPUT_STREAM_TDATA_blk_n <= INPUT_STREAM_V_data_V_0_state(0);
        else 
            INPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    INPUT_STREAM_TREADY <= INPUT_STREAM_V_dest_V_0_state(1);
    INPUT_STREAM_V_data_V_0_ack_in <= INPUT_STREAM_V_data_V_0_state(1);

    INPUT_STREAM_V_data_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234, ap_predicate_op62_read_state6, ap_block_pp1_stage0_flag00011001, ap_block_pp2_stage0_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_predicate_op62_read_state6) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)))) then 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_data_V_0_data_out_assign_proc : process(INPUT_STREAM_V_data_V_0_payload_A, INPUT_STREAM_V_data_V_0_payload_B, INPUT_STREAM_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_sel)) then 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_B;
        else 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_data_V_0_load_A <= (INPUT_STREAM_V_data_V_0_state_cmp_full and not(INPUT_STREAM_V_data_V_0_sel_wr));
    INPUT_STREAM_V_data_V_0_load_B <= (INPUT_STREAM_V_data_V_0_sel_wr and INPUT_STREAM_V_data_V_0_state_cmp_full);
    INPUT_STREAM_V_data_V_0_sel <= INPUT_STREAM_V_data_V_0_sel_rd;
    INPUT_STREAM_V_data_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_data_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_data_V_0_vld_out <= INPUT_STREAM_V_data_V_0_state(0);

    INPUT_STREAM_V_dest_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234, ap_predicate_op62_read_state6, ap_block_pp1_stage0_flag00011001, ap_block_pp2_stage0_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_predicate_op62_read_state6) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)))) then 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    INPUT_STREAM_V_dest_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_last_V_0_ack_in <= INPUT_STREAM_V_last_V_0_state(1);

    INPUT_STREAM_V_last_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234, ap_predicate_op62_read_state6, ap_block_pp1_stage0_flag00011001, ap_block_pp2_stage0_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_predicate_op62_read_state6) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)))) then 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_last_V_0_data_out_assign_proc : process(INPUT_STREAM_V_last_V_0_payload_A, INPUT_STREAM_V_last_V_0_payload_B, INPUT_STREAM_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_sel)) then 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_B;
        else 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_last_V_0_load_A <= (INPUT_STREAM_V_last_V_0_state_cmp_full and not(INPUT_STREAM_V_last_V_0_sel_wr));
    INPUT_STREAM_V_last_V_0_load_B <= (INPUT_STREAM_V_last_V_0_sel_wr and INPUT_STREAM_V_last_V_0_state_cmp_full);
    INPUT_STREAM_V_last_V_0_sel <= INPUT_STREAM_V_last_V_0_sel_rd;
    INPUT_STREAM_V_last_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_last_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_last_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_last_V_0_vld_out <= INPUT_STREAM_V_last_V_0_state(0);
    INPUT_STREAM_V_user_V_0_ack_in <= INPUT_STREAM_V_user_V_0_state(1);

    INPUT_STREAM_V_user_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234, ap_predicate_op62_read_state6, ap_block_pp1_stage0_flag00011001, ap_block_pp2_stage0_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (INPUT_STREAM_V_data_V_0_vld_out = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_predicate_op62_read_state6) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)))) then 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_user_V_0_data_out_assign_proc : process(INPUT_STREAM_V_user_V_0_payload_A, INPUT_STREAM_V_user_V_0_payload_B, INPUT_STREAM_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_sel)) then 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_B;
        else 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_user_V_0_load_A <= (INPUT_STREAM_V_user_V_0_state_cmp_full and not(INPUT_STREAM_V_user_V_0_sel_wr));
    INPUT_STREAM_V_user_V_0_load_B <= (INPUT_STREAM_V_user_V_0_sel_wr and INPUT_STREAM_V_user_V_0_state_cmp_full);
    INPUT_STREAM_V_user_V_0_sel <= INPUT_STREAM_V_user_V_0_sel_rd;
    INPUT_STREAM_V_user_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_user_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_user_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_user_V_0_vld_out <= INPUT_STREAM_V_user_V_0_state(0);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_flag00001001_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, img_0_data_stream_0_full_n, ap_enable_reg_pp1_iter1, exitcond_i_i_reg_376, ap_predicate_op62_read_state6)
    begin
                ap_block_pp1_stage0_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_const_boolean_1 = ap_predicate_op62_read_state6)) or ((ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_logic_0 = img_0_data_stream_0_full_n))));
    end process;


    ap_block_pp1_stage0_flag00011001_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, img_0_data_stream_0_full_n, ap_enable_reg_pp1_iter1, exitcond_i_i_reg_376, ap_predicate_op62_read_state6)
    begin
                ap_block_pp1_stage0_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_const_boolean_1 = ap_predicate_op62_read_state6)) or ((ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_logic_0 = img_0_data_stream_0_full_n))));
    end process;


    ap_block_pp1_stage0_flag00011011_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, img_0_data_stream_0_full_n, ap_enable_reg_pp1_iter1, exitcond_i_i_reg_376, ap_predicate_op62_read_state6)
    begin
                ap_block_pp1_stage0_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_const_boolean_1 = ap_predicate_op62_read_state6)) or ((ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_logic_0 = img_0_data_stream_0_full_n))));
    end process;

        ap_block_pp2_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_flag00011001_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234)
    begin
                ap_block_pp2_stage0_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out));
    end process;


    ap_block_pp2_stage0_flag00011011_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_234)
    begin
                ap_block_pp2_stage0_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, img_0_data_stream_0_full_n, exitcond_i_i_reg_376, ap_predicate_op62_read_state6)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_const_boolean_1 = ap_predicate_op62_read_state6)) or ((ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_logic_0 = img_0_data_stream_0_full_n)));
    end process;

        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp2_stage0_iter1_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, eol_2_i_i_reg_234)
    begin
                ap_block_state9_pp2_stage0_iter1 <= ((ap_const_lv1_0 = eol_2_i_i_reg_234) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out));
    end process;


    ap_condition_487_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000, exitcond_i_i_reg_376)
    begin
                ap_condition_487 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_reg_376));
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond2_i_i_fu_296_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond2_i_i_fu_296_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp2_iter0) and (ap_const_logic_0 = ap_enable_reg_pp2_iter1))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209 <= "X";
    ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op62_read_state6_assign_proc : process(exitcond_i_i_reg_376, brmerge_i_i_reg_385)
    begin
                ap_predicate_op62_read_state6 <= ((ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_const_lv1_0 = brmerge_i_i_reg_385));
    end process;


    ap_ready_assign_proc : process(exitcond2_i_i_fu_296_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond2_i_i_fu_296_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    axi_last_V_2_i_i_phi_fu_214_p4_assign_proc : process(INPUT_STREAM_V_last_V_0_data_out, brmerge_i_i_reg_385, eol_reg_187, ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209, ap_condition_487)
    begin
        if ((ap_condition_487 = ap_const_boolean_1)) then
            if ((ap_const_lv1_1 = brmerge_i_i_reg_385)) then 
                axi_last_V_2_i_i_phi_fu_214_p4 <= eol_reg_187;
            elsif ((ap_const_lv1_0 = brmerge_i_i_reg_385)) then 
                axi_last_V_2_i_i_phi_fu_214_p4 <= INPUT_STREAM_V_last_V_0_data_out;
            else 
                axi_last_V_2_i_i_phi_fu_214_p4 <= ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209;
            end if;
        else 
            axi_last_V_2_i_i_phi_fu_214_p4 <= ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_reg_209;
        end if; 
    end process;

    brmerge_i_i_fu_321_p2 <= (sof_1_i_i_fu_92 or eol_i_i_phi_fu_179_p4);

    eol_2_i_i_phi_fu_237_p4_assign_proc : process(INPUT_STREAM_V_last_V_0_data_out, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000, eol_2_i_i_reg_234)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = eol_2_i_i_reg_234))) then 
            eol_2_i_i_phi_fu_237_p4 <= INPUT_STREAM_V_last_V_0_data_out;
        else 
            eol_2_i_i_phi_fu_237_p4 <= eol_2_i_i_reg_234;
        end if; 
    end process;


    eol_i_i_phi_fu_179_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000, exitcond_i_i_reg_376, eol_i_i_reg_175, axi_last_V_2_i_i_phi_fu_214_p4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_reg_376))) then 
            eol_i_i_phi_fu_179_p4 <= axi_last_V_2_i_i_phi_fu_214_p4;
        else 
            eol_i_i_phi_fu_179_p4 <= eol_i_i_reg_175;
        end if; 
    end process;

    exitcond2_i_i_fu_296_p2 <= "1" when (p_i_i_reg_153 = tmp_fu_279_p1) else "0";
    exitcond_i_i_fu_307_p2 <= "1" when (p_2_i_i_reg_164 = tmp_9_fu_283_p1) else "0";
    i_V_fu_301_p2 <= std_logic_vector(unsigned(p_i_i_reg_153) + unsigned(ap_const_lv6_1));

    img_0_data_stream_0_blk_n_assign_proc : process(img_0_data_stream_0_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000, exitcond_i_i_reg_376)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_reg_376))) then 
            img_0_data_stream_0_blk_n <= img_0_data_stream_0_full_n;
        else 
            img_0_data_stream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_0_data_stream_0_din <= p_Val2_s_phi_fu_226_p4(8 - 1 downto 0);

    img_0_data_stream_0_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_reg_376, ap_block_pp1_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_reg_376) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then 
            img_0_data_stream_0_write <= ap_const_logic_1;
        else 
            img_0_data_stream_0_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_312_p2 <= std_logic_vector(unsigned(p_2_i_i_reg_164) + unsigned(ap_const_lv6_1));

    p_Val2_s_phi_fu_226_p4_assign_proc : process(INPUT_STREAM_V_data_V_0_data_out, brmerge_i_i_reg_385, axi_data_V_1_i_i_reg_198, ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222, ap_condition_487)
    begin
        if ((ap_condition_487 = ap_const_boolean_1)) then
            if ((ap_const_lv1_1 = brmerge_i_i_reg_385)) then 
                p_Val2_s_phi_fu_226_p4 <= axi_data_V_1_i_i_reg_198;
            elsif ((ap_const_lv1_0 = brmerge_i_i_reg_385)) then 
                p_Val2_s_phi_fu_226_p4 <= INPUT_STREAM_V_data_V_0_data_out;
            else 
                p_Val2_s_phi_fu_226_p4 <= ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222;
            end if;
        else 
            p_Val2_s_phi_fu_226_p4 <= ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_222;
        end if; 
    end process;

    tmp_9_fu_283_p1 <= cols(6 - 1 downto 0);
    tmp_fu_279_p1 <= rows(6 - 1 downto 0);
    tmp_user_V_fu_287_p1 <= INPUT_STREAM_V_user_V_0_data_out;
end behav;
