// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rows,
        cols,
        img_1_data_stream_0_din,
        img_1_data_stream_0_full_n,
        img_1_data_stream_0_write,
        img_0_data_stream_0_dout,
        img_0_data_stream_0_empty_n,
        img_0_data_stream_0_read
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] rows;
input  [31:0] cols;
output  [7:0] img_1_data_stream_0_din;
input   img_1_data_stream_0_full_n;
output   img_1_data_stream_0_write;
input  [7:0] img_0_data_stream_0_dout;
input   img_0_data_stream_0_empty_n;
output   img_0_data_stream_0_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_1_data_stream_0_write;
reg img_0_data_stream_0_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] line_buffer_address0;
reg    line_buffer_ce0;
reg    line_buffer_we0;
reg   [7:0] line_buffer_d0;
wire   [7:0] line_buffer_q0;
reg   [6:0] line_buffer_address1;
reg    line_buffer_ce1;
reg    line_buffer_we1;
wire   [7:0] line_buffer_q1;
reg   [3:0] window_buffer_address0;
reg    window_buffer_ce0;
reg    window_buffer_we0;
reg   [7:0] window_buffer_d0;
wire   [7:0] window_buffer_q0;
reg   [3:0] window_buffer_address1;
reg    window_buffer_ce1;
reg    window_buffer_we1;
reg   [7:0] window_buffer_d1;
wire   [7:0] window_buffer_q1;
wire   [3:0] Gx_address0;
reg    Gx_ce0;
wire   [2:0] Gx_q0;
wire   [3:0] Gy_address0;
reg    Gy_ce0;
wire   [2:0] Gy_q0;
reg    img_1_data_stream_0_blk_n;
wire    ap_CS_fsm_state14;
reg   [0:0] tmp_5_reg_900;
reg    img_0_data_stream_0_blk_n;
wire    ap_CS_fsm_state7;
reg   [0:0] or_cond_i_reg_869;
wire   [5:0] tmp_fu_390_p1;
reg    ap_block_state1;
wire   [5:0] tmp_3_fu_394_p1;
wire   [5:0] tmp_1_i_fu_398_p2;
wire   [5:0] tmp_2_i_fu_404_p2;
wire   [5:0] tmp_12_i_fu_410_p2;
wire   [5:0] tmp_31_i_fu_416_p2;
wire   [5:0] row_fu_427_p2;
reg   [5:0] row_reg_805;
wire    ap_CS_fsm_state2;
wire   [5:0] output_row_fu_433_p2;
reg   [5:0] output_row_reg_810;
wire   [0:0] exitcond4_i_fu_422_p2;
wire   [0:0] tmp_4_i_fu_439_p2;
reg   [0:0] tmp_4_i_reg_815;
wire   [0:0] tmp_5_i_fu_444_p2;
reg   [0:0] tmp_5_i_reg_820;
wire   [0:0] tmp_6_i_fu_450_p2;
reg   [0:0] tmp_6_i_reg_825;
wire   [5:0] col_fu_460_p2;
reg   [5:0] col_reg_833;
wire    ap_CS_fsm_state3;
wire   [5:0] output_col_fu_466_p2;
reg   [5:0] output_col_reg_838;
wire   [0:0] exitcond3_i_fu_455_p2;
wire   [1:0] k_fu_478_p2;
reg   [1:0] k_reg_848;
wire    ap_CS_fsm_state4;
wire   [4:0] tmp_37_i_fu_500_p2;
reg   [4:0] tmp_37_i_reg_853;
wire   [0:0] exitcond2_i_fu_472_p2;
reg   [3:0] window_buffer_addr_reg_858;
wire   [0:0] or_cond_i_fu_533_p2;
reg   [6:0] line_buffer_addr_reg_873;
reg   [6:0] line_buffer_addr_2_reg_879;
wire    ap_CS_fsm_state6;
reg   [7:0] line_buffer_load_reg_885;
reg    ap_block_state7;
wire   [1:0] i_fu_614_p2;
reg   [1:0] i_reg_910;
wire    ap_CS_fsm_state9;
wire   [4:0] tmp_43_i_fu_636_p2;
reg   [4:0] tmp_43_i_reg_915;
wire   [0:0] exitcond1_i_fu_608_p2;
wire   [7:0] tmp_23_i_fu_690_p2;
reg   [7:0] tmp_23_i_reg_920;
wire   [1:0] j_fu_702_p2;
reg   [1:0] j_reg_930;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond_i_fu_696_p2;
reg   [7:0] window_buffer_load_2_reg_950;
wire    ap_CS_fsm_state11;
reg  signed [2:0] Gx_load_reg_955;
reg  signed [2:0] Gy_load_reg_960;
wire  signed [15:0] grp_fu_756_p3;
wire    ap_CS_fsm_state12;
wire  signed [15:0] grp_fu_764_p3;
wire   [7:0] p_i_fu_748_p3;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_24_i_fu_738_p2;
reg   [5:0] row_i_reg_235;
reg   [5:0] col_i_reg_246;
reg    ap_block_state14;
reg   [1:0] k_i_reg_258;
wire    ap_CS_fsm_state5;
reg   [7:0] storemerge5_i_phi_fu_273_p4;
reg   [7:0] storemerge5_i_reg_269;
reg   [7:0] storemerge1_i_reg_281;
reg   [7:0] storemerge_i_reg_293;
reg   [15:0] y_dir_i_reg_305;
wire    ap_CS_fsm_state8;
wire   [0:0] or_cond8_i_fu_602_p2;
reg   [15:0] x_dir_i_reg_317;
reg   [1:0] i_i_reg_329;
reg   [15:0] y_dir_1_i_reg_340;
reg   [15:0] x_dir_1_i_reg_352;
reg   [1:0] j_i_reg_364;
reg   [7:0] tmp_8_reg_375;
wire  signed [63:0] tmp_38_cast_i_fu_512_p1;
wire  signed [63:0] tmp_39_cast_i_fu_523_p1;
wire   [63:0] tmp_40_cast_i_fu_548_p1;
wire  signed [63:0] tmp_37_cast_i_fu_553_p1;
wire   [63:0] tmp_3_i_fu_557_p1;
wire   [63:0] tmp_41_i_fu_562_p3;
wire  signed [63:0] tmp_44_cast_i_fu_717_p1;
wire   [3:0] tmp_36_i_fu_488_p3;
wire   [4:0] p_shl_cast_i_fu_496_p1;
wire   [4:0] tmp_cast_i_fu_484_p1;
wire   [4:0] tmp_38_i_fu_506_p2;
wire   [4:0] tmp_39_i_fu_517_p2;
wire   [0:0] tmp_8_i_fu_528_p2;
wire   [6:0] tmp_3_cast_i_fu_538_p1;
wire   [6:0] tmp_40_i_fu_542_p2;
wire   [5:0] tmp_10_i_fu_571_p2;
wire   [0:0] tmp_13_i_fu_583_p2;
wire   [0:0] tmp_14_i_fu_588_p2;
wire   [0:0] tmp2_i_fu_597_p2;
wire   [0:0] tmp1_i_fu_592_p2;
wire   [3:0] tmp_42_i_fu_624_p3;
wire   [4:0] p_shl1_cast_i_fu_632_p1;
wire   [4:0] tmp_25_cast_i_fu_620_p1;
wire   [7:0] tmp_6_fu_648_p1;
wire   [0:0] tmp_15_i_fu_642_p2;
wire   [7:0] tmp_17_i_fu_652_p2;
wire   [7:0] tmp_7_fu_672_p1;
wire   [0:0] tmp_19_i_fu_666_p2;
wire   [7:0] tmp_21_i_fu_676_p2;
wire   [7:0] tmp_22_i_fu_682_p3;
wire   [7:0] tmp_18_i_fu_658_p3;
wire   [4:0] tmp_29_cast_i_fu_708_p1;
wire   [4:0] tmp_44_i_fu_712_p2;
wire   [0:0] tmp_26_i_fu_743_p2;
wire   [7:0] edge_val_fu_733_p2;
wire   [7:0] grp_fu_756_p1;
wire   [11:0] tmp_30_cast_i_fu_724_p1;
wire   [7:0] grp_fu_764_p1;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
end

Loop_1_proc_line_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
line_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_address0),
    .ce0(line_buffer_ce0),
    .we0(line_buffer_we0),
    .d0(line_buffer_d0),
    .q0(line_buffer_q0),
    .address1(line_buffer_address1),
    .ce1(line_buffer_ce1),
    .we1(line_buffer_we1),
    .d1(line_buffer_q1),
    .q1(line_buffer_q1)
);

Loop_1_proc_windocud #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
window_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(window_buffer_address0),
    .ce0(window_buffer_ce0),
    .we0(window_buffer_we0),
    .d0(window_buffer_d0),
    .q0(window_buffer_q0),
    .address1(window_buffer_address1),
    .ce1(window_buffer_ce1),
    .we1(window_buffer_we1),
    .d1(window_buffer_d1),
    .q1(window_buffer_q1)
);

Loop_1_proc_Gx #(
    .DataWidth( 3 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
Gx_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Gx_address0),
    .ce0(Gx_ce0),
    .q0(Gx_q0)
);

Loop_1_proc_Gy #(
    .DataWidth( 3 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
Gy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Gy_address0),
    .ce0(Gy_ce0),
    .q0(Gy_q0)
);

convolution_sobeldEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolution_sobeldEe_U11(
    .din0(Gx_load_reg_955),
    .din1(grp_fu_756_p1),
    .din2(x_dir_1_i_reg_352),
    .dout(grp_fu_756_p3)
);

convolution_sobeldEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolution_sobeldEe_U12(
    .din0(Gy_load_reg_960),
    .din1(grp_fu_764_p1),
    .din2(y_dir_1_i_reg_340),
    .dout(grp_fu_764_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond4_i_fu_422_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond4_i_fu_422_p2))) begin
        col_i_reg_246 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & ~((tmp_5_reg_900 == 1'd0) & (1'b0 == img_1_data_stream_0_full_n)))) begin
        col_i_reg_246 <= col_reg_833;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_900 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd0 == or_cond8_i_fu_602_p2))) begin
        i_i_reg_329 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == exitcond_i_fu_696_p2))) begin
        i_i_reg_329 <= i_reg_910;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond1_i_fu_608_p2))) begin
        j_i_reg_364 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_i_reg_364 <= j_reg_930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        k_i_reg_258 <= k_reg_848;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond3_i_fu_455_p2))) begin
        k_i_reg_258 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond3_i_fu_455_p2))) begin
        row_i_reg_235 <= row_reg_805;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        row_i_reg_235 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd0 == or_cond_i_fu_533_p2))) begin
        storemerge1_i_reg_281 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        storemerge1_i_reg_281 <= line_buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd0 == or_cond_i_fu_533_p2))) begin
        storemerge5_i_reg_269 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        storemerge5_i_reg_269 <= line_buffer_load_reg_885;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd0 == or_cond_i_fu_533_p2))) begin
        storemerge_i_reg_293 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        storemerge_i_reg_293 <= img_0_data_stream_0_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_5_reg_900 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd1 == or_cond8_i_fu_602_p2)) | ((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_24_i_fu_738_p2)))) begin
        tmp_8_reg_375 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_24_i_fu_738_p2))) begin
        tmp_8_reg_375 <= p_i_fu_748_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond1_i_fu_608_p2))) begin
        x_dir_1_i_reg_352 <= x_dir_i_reg_317;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_dir_1_i_reg_352 <= grp_fu_756_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_900 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd0 == or_cond8_i_fu_602_p2))) begin
        x_dir_i_reg_317 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == exitcond_i_fu_696_p2))) begin
        x_dir_i_reg_317 <= x_dir_1_i_reg_352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond1_i_fu_608_p2))) begin
        y_dir_1_i_reg_340 <= y_dir_i_reg_305;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_dir_1_i_reg_340 <= grp_fu_764_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_900 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd0 == or_cond8_i_fu_602_p2))) begin
        y_dir_i_reg_305 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == exitcond_i_fu_696_p2))) begin
        y_dir_i_reg_305 <= y_dir_1_i_reg_340;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Gx_load_reg_955 <= Gx_q0;
        Gy_load_reg_960 <= Gy_q0;
        window_buffer_load_2_reg_950 <= window_buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        col_reg_833 <= col_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_reg_910 <= i_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_930 <= j_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_848 <= k_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_addr_2_reg_879[5 : 0] <= tmp_41_i_fu_562_p3[5 : 0];
        line_buffer_load_reg_885 <= line_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd1 == or_cond_i_fu_533_p2))) begin
        line_buffer_addr_reg_873 <= tmp_40_cast_i_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2))) begin
        or_cond_i_reg_869 <= or_cond_i_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond3_i_fu_455_p2))) begin
        output_col_reg_838 <= output_col_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond4_i_fu_422_p2))) begin
        output_row_reg_810 <= output_row_fu_433_p2;
        tmp_4_i_reg_815 <= tmp_4_i_fu_439_p2;
        tmp_5_i_reg_820 <= tmp_5_i_fu_444_p2;
        tmp_6_i_reg_825 <= tmp_6_i_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_reg_805 <= row_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond1_i_fu_608_p2))) begin
        tmp_23_i_reg_920 <= tmp_23_i_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond2_i_fu_472_p2))) begin
        tmp_37_i_reg_853 <= tmp_37_i_fu_500_p2;
        window_buffer_addr_reg_858 <= tmp_38_cast_i_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond1_i_fu_608_p2))) begin
        tmp_43_i_reg_915 <= tmp_43_i_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        tmp_5_reg_900 <= tmp_10_i_fu_571_p2[32'd5];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Gx_ce0 = 1'b1;
    end else begin
        Gx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Gy_ce0 = 1'b1;
    end else begin
        Gy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond4_i_fu_422_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond4_i_fu_422_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1))) begin
        img_0_data_stream_0_blk_n = img_0_data_stream_0_empty_n;
    end else begin
        img_0_data_stream_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        img_0_data_stream_0_read = 1'b1;
    end else begin
        img_0_data_stream_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_5_reg_900 == 1'd0))) begin
        img_1_data_stream_0_blk_n = img_1_data_stream_0_full_n;
    end else begin
        img_1_data_stream_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_5_reg_900 == 1'd0) & ~((tmp_5_reg_900 == 1'd0) & (1'b0 == img_1_data_stream_0_full_n)))) begin
        img_1_data_stream_0_write = 1'b1;
    end else begin
        img_1_data_stream_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buffer_address0 = line_buffer_addr_2_reg_879;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_address0 = tmp_3_i_fu_557_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_address0 = tmp_40_cast_i_fu_548_p1;
    end else begin
        line_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buffer_address1 = line_buffer_addr_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_address1 = tmp_41_i_fu_562_p3;
    end else begin
        line_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n))))) begin
        line_buffer_ce0 = 1'b1;
    end else begin
        line_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n))))) begin
        line_buffer_ce1 = 1'b1;
    end else begin
        line_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buffer_d0 = img_0_data_stream_0_dout;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_d0 = line_buffer_q0;
    end else begin
        line_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n))))) begin
        line_buffer_we0 = 1'b1;
    end else begin
        line_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
        line_buffer_we1 = 1'b1;
    end else begin
        line_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_i_reg_869 == 1'd1))) begin
        storemerge5_i_phi_fu_273_p4 = line_buffer_load_reg_885;
    end else begin
        storemerge5_i_phi_fu_273_p4 = storemerge5_i_reg_269;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        window_buffer_address0 = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        window_buffer_address0 = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        window_buffer_address0 = tmp_37_cast_i_fu_553_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        window_buffer_address0 = tmp_38_cast_i_fu_512_p1;
    end else begin
        window_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_buffer_address1 = tmp_44_cast_i_fu_717_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        window_buffer_address1 = 4'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        window_buffer_address1 = window_buffer_addr_reg_858;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        window_buffer_address1 = tmp_39_cast_i_fu_523_p1;
    end else begin
        window_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n))) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8))) begin
        window_buffer_ce0 = 1'b1;
    end else begin
        window_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8))) begin
        window_buffer_ce1 = 1'b1;
    end else begin
        window_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        window_buffer_d0 = storemerge_i_reg_293;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        window_buffer_d0 = storemerge5_i_phi_fu_273_p4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        window_buffer_d0 = window_buffer_q0;
    end else begin
        window_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        window_buffer_d1 = storemerge1_i_reg_281;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        window_buffer_d1 = window_buffer_q1;
    end else begin
        window_buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n))) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8))) begin
        window_buffer_we0 = 1'b1;
    end else begin
        window_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8))) begin
        window_buffer_we1 = 1'b1;
    end else begin
        window_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond4_i_fu_422_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond3_i_fu_455_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd0 == or_cond_i_fu_533_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == exitcond2_i_fu_472_p2) & (1'd1 == or_cond_i_fu_533_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ~((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_5_reg_900 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd0 == or_cond8_i_fu_602_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond1_i_fu_608_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == exitcond_i_fu_696_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & ~((tmp_5_reg_900 == 1'd0) & (1'b0 == img_1_data_stream_0_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Gx_address0 = tmp_44_cast_i_fu_717_p1;

assign Gy_address0 = tmp_44_cast_i_fu_717_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state14 = ((tmp_5_reg_900 == 1'd0) & (1'b0 == img_1_data_stream_0_full_n));
end

always @ (*) begin
    ap_block_state7 = ((or_cond_i_reg_869 == 1'd1) & (1'b0 == img_0_data_stream_0_empty_n));
end

assign col_fu_460_p2 = (col_i_reg_246 + 6'd1);

assign edge_val_fu_733_p2 = (tmp_23_i_reg_920 ^ 8'd255);

assign exitcond1_i_fu_608_p2 = ((i_i_reg_329 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_i_fu_472_p2 = ((k_i_reg_258 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_i_fu_455_p2 = ((col_i_reg_246 == tmp_12_i_fu_410_p2) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_422_p2 = ((row_i_reg_235 == tmp_31_i_fu_416_p2) ? 1'b1 : 1'b0);

assign exitcond_i_fu_696_p2 = ((j_i_reg_364 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_756_p1 = tmp_30_cast_i_fu_724_p1;

assign grp_fu_764_p1 = tmp_30_cast_i_fu_724_p1;

assign i_fu_614_p2 = (i_i_reg_329 + 2'd1);

assign img_1_data_stream_0_din = tmp_8_reg_375;

assign j_fu_702_p2 = (j_i_reg_364 + 2'd1);

assign k_fu_478_p2 = (k_i_reg_258 + 2'd1);

assign or_cond8_i_fu_602_p2 = (tmp2_i_fu_597_p2 | tmp1_i_fu_592_p2);

assign or_cond_i_fu_533_p2 = (tmp_8_i_fu_528_p2 & tmp_4_i_reg_815);

assign output_col_fu_466_p2 = ($signed(col_i_reg_246) + $signed(6'd63));

assign output_row_fu_433_p2 = ($signed(row_i_reg_235) + $signed(6'd63));

assign p_i_fu_748_p3 = ((tmp_26_i_fu_743_p2[0:0] === 1'b1) ? 8'd255 : edge_val_fu_733_p2);

assign p_shl1_cast_i_fu_632_p1 = tmp_42_i_fu_624_p3;

assign p_shl_cast_i_fu_496_p1 = tmp_36_i_fu_488_p3;

assign row_fu_427_p2 = (row_i_reg_235 + 6'd1);

assign tmp1_i_fu_592_p2 = (tmp_5_i_reg_820 | tmp_13_i_fu_583_p2);

assign tmp2_i_fu_597_p2 = (tmp_6_i_reg_825 | tmp_14_i_fu_588_p2);

assign tmp_10_i_fu_571_p2 = (output_col_reg_838 | output_row_reg_810);

assign tmp_12_i_fu_410_p2 = (tmp_3_fu_394_p1 + 6'd1);

assign tmp_13_i_fu_583_p2 = ((output_col_reg_838 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_14_i_fu_588_p2 = ((output_col_reg_838 == tmp_2_i_fu_404_p2) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_642_p2 = (($signed(x_dir_i_reg_317) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_17_i_fu_652_p2 = (8'd0 - tmp_6_fu_648_p1);

assign tmp_18_i_fu_658_p3 = ((tmp_15_i_fu_642_p2[0:0] === 1'b1) ? tmp_6_fu_648_p1 : tmp_17_i_fu_652_p2);

assign tmp_19_i_fu_666_p2 = (($signed(y_dir_i_reg_305) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_398_p2 = ($signed(tmp_fu_390_p1) + $signed(6'd63));

assign tmp_21_i_fu_676_p2 = (8'd0 - tmp_7_fu_672_p1);

assign tmp_22_i_fu_682_p3 = ((tmp_19_i_fu_666_p2[0:0] === 1'b1) ? tmp_7_fu_672_p1 : tmp_21_i_fu_676_p2);

assign tmp_23_i_fu_690_p2 = (tmp_22_i_fu_682_p3 + tmp_18_i_fu_658_p3);

assign tmp_24_i_fu_738_p2 = ((tmp_23_i_reg_920 < 8'd55) ? 1'b1 : 1'b0);

assign tmp_25_cast_i_fu_620_p1 = i_i_reg_329;

assign tmp_26_i_fu_743_p2 = ((tmp_23_i_reg_920 > 8'd205) ? 1'b1 : 1'b0);

assign tmp_29_cast_i_fu_708_p1 = j_i_reg_364;

assign tmp_2_i_fu_404_p2 = ($signed(tmp_3_fu_394_p1) + $signed(6'd63));

assign tmp_30_cast_i_fu_724_p1 = window_buffer_load_2_reg_950;

assign tmp_31_i_fu_416_p2 = (tmp_fu_390_p1 + 6'd1);

assign tmp_36_i_fu_488_p3 = {{k_i_reg_258}, {2'd0}};

assign tmp_37_cast_i_fu_553_p1 = $signed(tmp_37_i_reg_853);

assign tmp_37_i_fu_500_p2 = (p_shl_cast_i_fu_496_p1 - tmp_cast_i_fu_484_p1);

assign tmp_38_cast_i_fu_512_p1 = $signed(tmp_38_i_fu_506_p2);

assign tmp_38_i_fu_506_p2 = (tmp_37_i_fu_500_p2 + 5'd1);

assign tmp_39_cast_i_fu_523_p1 = $signed(tmp_39_i_fu_517_p2);

assign tmp_39_i_fu_517_p2 = (tmp_37_i_fu_500_p2 + 5'd2);

assign tmp_3_cast_i_fu_538_p1 = col_i_reg_246;

assign tmp_3_fu_394_p1 = cols[5:0];

assign tmp_3_i_fu_557_p1 = col_i_reg_246;

assign tmp_40_cast_i_fu_548_p1 = tmp_40_i_fu_542_p2;

assign tmp_40_i_fu_542_p2 = (tmp_3_cast_i_fu_538_p1 + 7'd32);

assign tmp_41_i_fu_562_p3 = {{58'd1}, {col_i_reg_246}};

assign tmp_42_i_fu_624_p3 = {{i_i_reg_329}, {2'd0}};

assign tmp_43_i_fu_636_p2 = (p_shl1_cast_i_fu_632_p1 - tmp_25_cast_i_fu_620_p1);

assign tmp_44_cast_i_fu_717_p1 = $signed(tmp_44_i_fu_712_p2);

assign tmp_44_i_fu_712_p2 = (tmp_43_i_reg_915 + tmp_29_cast_i_fu_708_p1);

assign tmp_4_i_fu_439_p2 = ((row_i_reg_235 < tmp_fu_390_p1) ? 1'b1 : 1'b0);

assign tmp_5_i_fu_444_p2 = ((output_row_fu_433_p2 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_648_p1 = x_dir_i_reg_317[7:0];

assign tmp_6_i_fu_450_p2 = ((output_row_fu_433_p2 == tmp_1_i_fu_398_p2) ? 1'b1 : 1'b0);

assign tmp_7_fu_672_p1 = y_dir_i_reg_305[7:0];

assign tmp_8_i_fu_528_p2 = ((col_i_reg_246 < tmp_3_fu_394_p1) ? 1'b1 : 1'b0);

assign tmp_cast_i_fu_484_p1 = k_i_reg_258;

assign tmp_fu_390_p1 = rows[5:0];

always @ (posedge ap_clk) begin
    line_buffer_addr_2_reg_879[6] <= 1'b1;
end

endmodule //Loop_1_proc
