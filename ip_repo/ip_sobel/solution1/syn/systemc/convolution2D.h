// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution2D_HH_
#define _convolution2D_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ip_sobel_mul_8ns_bkb.h"

namespace ap_rtl {

struct convolution2D : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<10> > posy;
    sc_in< sc_lv<10> > posx;
    sc_out< sc_lv<20> > input_img_address0;
    sc_out< sc_logic > input_img_ce0;
    sc_in< sc_lv<8> > input_img_q0;
    sc_out< sc_lv<4> > operator_address0;
    sc_out< sc_logic > operator_ce0;
    sc_in< sc_lv<32> > operator_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution2D(sc_module_name name);
    SC_HAS_PROCESS(convolution2D);

    ~convolution2D();

    sc_trace_file* mVcdFile;

    ip_sobel_mul_8ns_bkb<1,3,8,32,32>* ip_sobel_mul_8ns_bkb_U1;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<22> > j_cast_fu_102_p1;
    sc_signal< sc_lv<22> > j_cast_reg_230;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > j_2_fu_112_p2;
    sc_signal< sc_lv<3> > j_2_reg_238;
    sc_signal< sc_lv<1> > exitcond1_fu_106_p2;
    sc_signal< sc_lv<5> > tmp_cast_fu_118_p1;
    sc_signal< sc_lv<5> > tmp_cast_reg_243;
    sc_signal< sc_lv<22> > tmp_s_fu_148_p2;
    sc_signal< sc_lv<22> > tmp_s_reg_251;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_122_p2;
    sc_signal< sc_lv<3> > i_2_fu_153_p2;
    sc_signal< sc_lv<3> > i_2_reg_256;
    sc_signal< sc_lv<5> > tmp_11_fu_177_p2;
    sc_signal< sc_lv<5> > tmp_11_reg_261;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > input_img_load_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_291;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > j_reg_72;
    sc_signal< sc_lv<3> > i_reg_83;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > tmp_2_fu_185_p1;
    sc_signal< sc_lv<64> > tmp_16_cast_fu_190_p1;
    sc_signal< sc_lv<32> > res_fu_32;
    sc_signal< sc_lv<32> > res_1_fu_203_p2;
    sc_signal< sc_lv<10> > tmp_3_cast_fu_128_p1;
    sc_signal< sc_lv<10> > tmp_5_fu_132_p2;
    sc_signal< sc_lv<20> > tmp1_fu_137_p3;
    sc_signal< sc_lv<22> > tmp1_cast_cast_fu_144_p1;
    sc_signal< sc_lv<5> > tmp_9_fu_163_p3;
    sc_signal< sc_lv<5> > tmp_4_cast_fu_159_p1;
    sc_signal< sc_lv<5> > tmp_10_fu_171_p2;
    sc_signal< sc_lv<32> > tmp_cast_11_fu_182_p1;
    sc_signal< sc_lv<8> > grp_fu_197_p0;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<32> > grp_fu_197_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond1_fu_106_p2();
    void thread_exitcond_fu_122_p2();
    void thread_grp_fu_197_p0();
    void thread_grp_fu_197_p00();
    void thread_i_2_fu_153_p2();
    void thread_input_img_address0();
    void thread_input_img_ce0();
    void thread_j_2_fu_112_p2();
    void thread_j_cast_fu_102_p1();
    void thread_operator_address0();
    void thread_operator_ce0();
    void thread_res_1_fu_203_p2();
    void thread_tmp1_cast_cast_fu_144_p1();
    void thread_tmp1_fu_137_p3();
    void thread_tmp_10_fu_171_p2();
    void thread_tmp_11_fu_177_p2();
    void thread_tmp_16_cast_fu_190_p1();
    void thread_tmp_2_fu_185_p1();
    void thread_tmp_3_cast_fu_128_p1();
    void thread_tmp_4_cast_fu_159_p1();
    void thread_tmp_5_fu_132_p2();
    void thread_tmp_9_fu_163_p3();
    void thread_tmp_cast_11_fu_182_p1();
    void thread_tmp_cast_fu_118_p1();
    void thread_tmp_s_fu_148_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
