/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
//#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "my_multiplierIP.h"
#include "xil_io.h"


int main()
{
	unsigned int j;


	int i;
	int enable;
	//int ready;
	const int size = 10;
	int out;



    //init_platform()
	xil_printf("Start Testing...\n\r");

	//SIZE
	MY_MULTIPLIERIP_mWriteReg(0x43C00000, 28, size);


	//X INPUT
	for (i = 0; i < size; i++)  {
	   while ((0 == MY_MULTIPLIERIP_mReadReg(0x43C00000, 16) ) ) {
		   MY_MULTIPLIERIP_mWriteReg(0x43C00000, 20, 1); //TRIGGER = 1
	   }//oso ready=0


	   MY_MULTIPLIERIP_mWriteReg(0x43C00000, 20, 0); //TRIGGER = 0
	   MY_MULTIPLIERIP_mWriteReg(0x43C00000, 4, i);//NEW ADDR
	   xil_printf("ok\n");
	}
	//MY_MULTIPLIERIP_mWriteReg(0x43C00000, 0, 1);

	//delay
	for (j = 0; j < 100000000; j++) {};
	//START
	MY_MULTIPLIERIP_mWriteReg(0x43C00000, 0, 0);

	while (0 == MY_MULTIPLIERIP_mReadReg(0x43C00000, 16) ) {}; //READY=1
	MY_MULTIPLIERIP_mWriteReg(0x43C00000, 20, 1); //TRIGGER = 1



	while (enable == 0) {
		enable = MY_MULTIPLIERIP_mReadReg(0x43C00000, 12);
	}

	while (1) {
	//write slv_reg2
	for (i=0; i < size; i++) {
		MY_MULTIPLIERIP_mWriteReg(0x43C00000, 8, i); //Yi
		out = MY_MULTIPLIERIP_mReadReg(0x43C00000, 24); //data out
		xil_printf("Mem[%d] = %d\n\r", i, out);
		for (j = 0; j < 100000000; j++) {}

	}
	xil_printf("\n\r");
	}


    //cleanup_platform();
    return 0;
}
